@model IEnumerable<Movie_Exercise.Models.ViewModels.CartItemVM>

@{
    ViewData["Title"] = "ViewCart";
}

<h1>List of Items</h1>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.MovieTitle)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Quantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                Total
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ImgFile)
            </th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr class="cart-item">
            <td>
                @Html.DisplayFor(modelItem => item.MovieTitle)
            </td>
            <td>
                    <button class="button-plus border rounded-circle icon-shape icon-sm" type="button" onclick="Increment(@item.Id)">+</button>
                    <input id='@item.Id' type="number" step="1" max="10" value="@item.Quantity" name="quantity" class="quantity-field border-0 text-center w-25">
                    <button class="button-plus border rounded-circle icon-shape icon-sm" type="button" onclick="Decrement(@item.Id)">-</button>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                    <span onchange="location.reload"> @item.CartItemTotal() </span>
            </td>
            <td>
                <img src="~/Images/@item.ImgFile" class="cart-img">
            </td>
        </tr>
}
    </tbody>
</table>
<div class="row">
    <div class="col-md-6"> 
        <button onclick="toggleForm()">Checkout</button>
    </div>
    <div class="col-md-5">
        <p>Total Price: @Model.Sum(i => i.CartItemTotal())</p>
        <p>Items: @Model.Sum(i => i.Quantity) </p>
    </div>
</div>

@*form comes after checkout button clicked*@
<div class="form-body" id="checkout-form" style="display:none;">
    <div class="row">
        <div class="form-holder">
            <div class="form-content">
                <div class="form-items">
                    <h3>Register Today</h3>
                    <p>Fill in the data below.</p>
                    <form class="requires-validation" id="form-data"  method="POST" action="/Cart/CheckCustomer" novalidate>
                        <div class="col-md-12">
                                <input class="form-control" type="email" id="email" name="EmailAddress" placeholder="E-mail Address" required>
                                <div class="valid-feedback">
                                    Your Email is alrady exisit! 
                                    @*<a class="btn btn-primary" asp-area="Identity" asp-page="/Account/Login">Login</a>*@
                                </div>
                        </div>
                        <div class="col-md-12">
                            <input id="customer-FirstName" class="form-control" type="text" name="FirstName" placeholder="First Name" required>
                            <div class="valid-feedback">Billing Address field is valid!</div>
                            <div class="invalid-feedback">Billing Address field cannot be blank!</div>
                        </div>
                        <div class="col-md-12">
                            <input id="customer-LastName" class="form-control" type="text" name="LastName" placeholder="Last Name" required>
                            <div class="valid-feedback">Billing Address field is valid!</div>
                            <div class="invalid-feedback">Billing Address field cannot be blank!</div>
                        </div>
                        <div class="col-md-12">
                            <input id="customer-BillingAddress" class="form-control" type="text" name="BillingAddress" placeholder="Billing Address" required>
                            <div class="valid-feedback">Billing Address field is valid!</div>
                            <div class="invalid-feedback">Billing Address field cannot be blank!</div>
                        </div>
                        <br />
                        <div class="col-md-12">
                            <input id="customer-BillingZip" class="form-control" type="number" name="BillingZip" placeholder="Billing Zip" required>
                            <div class="valid-feedback">Billing Zip field is valid!</div>
                            <div class="invalid-feedback">Billing Zip field cannot be blank!</div>
                        </div>
                        <div class="col-md-12">
                            <input id="customer-BillingCity" class="form-control" type="text" name="BillingCity" placeholder="Billing City" required>
                            <div class="valid-feedback">Billing City field is valid!</div>
                            <div class="invalid-feedback">Billing City field cannot be blank!</div>
                        </div>
                        <div class="col-md-12">
                            <input id="customer-DeliveryAddress" class="form-control" type="text" name="DeliveryAddress" placeholder="Delivery Address" required>
                            <div class="valid-feedback">Delivery Address field is valid!</div>
                            <div class="invalid-feedback">Delivery Address field cannot be blank!</div>
                        </div>
                        <br />
                        <div class="col-md-12">
                            <input id ="customer-DeliveryZip" class="form-control" type="number" name="DeliveryZip" placeholder="Delivery Zip" required>
                            <div class="valid-feedback">Delivery Zip field is valid!</div>
                            <div class="invalid-feedback">Delivery Zip field cannot be blank!</div>
                        </div>
                        <div class="col-md-12">
                            <input id="customer-DeliveryCity" class="form-control" type="text" name="DeliveryCity" placeholder="Delivery City" required>
                            <div class="valid-feedback">Delivery City field is valid!</div>
                            <div class="invalid-feedback">Delivery City field cannot be blank!</div>
                        </div>
                        <br />
                        <div class="col-md-12">
                            <input id="customer-PhoneNumber" class="form-control" type="tel" name="PhoneNumber" placeholder="Phone Number" required>
                            <div class="valid-feedback">Phone Number field is valid!</div>
                            <div class="invalid-feedback">Phone Number field cannot be blank!</div>
                        </div>
                        <div class="form-button mt-3">
                            <button id="submit" type="submit" class="btn btn-primary" onclick="CheckCustomer()">Continue</button>
                        </div>
                    </form>
                </div>
            </div>  
        </div>
    </div>
</div>

@section Scripts {
    <script>
         function Increment(movieId) {
            var requestUrl = "/Cart/IncrementCartItem/";
            $.ajax({
                type: "POST",
                url: requestUrl,
                dataType: "json",
                cach: false,
                data: { Id: movieId },
                success: function (data) {
                    // alert(JSON.stringify(data)); show entire object in JSON format
                    $.each(data, function (i, obj) {
                        $('#' + movieId).html(JSON.stringify(data.value));
                    })
                    // to make the page reload: location.reload();
                    location.reload();
                },
            })
        }

        function Decrement(movieId) {
            
            var requestUrl = "/Cart/DecrementCartItem/";
            $.ajax({
                type: "POST",
                url: requestUrl,
                dataType: "json",
                cach: false,
                data: { Id: movieId },
                success: function (data) {
                    // alert(JSON.stringify(data)); show entire object in JSON format
                        $.each(data, function(i, obj){
                            $('#'+movieId).html(JSON.stringify(data.value));
                        })
                        // to make the page reload: location.reload();
                    location.reload();
                },
            })
        }

        // Toget button to checkout form
        function toggleForm() {
            const form = document.getElementById("checkout-form");
            if (form.style.display === "none") {
                form.style.display = "block";
            } else {
                form.style.display = "none";
            }
        }

        

        //Add jQuery and the following script to your view
        document.getElementById("email").addEventListener("keyup", checkEmail);
        // Attach event listener to email check button
        function checkEmail() {
                    var email = $('#email').val();
                    // Send AJAX request to CheckEmailExists action
                    $.post("/Cart/CheckEmailExists/", { email: email }, function (data) {
                        if (data) {
                            // Email does not exist in database
                            $('#email').removeClass('is-invalid').addClass('is-valid');
                            $('#customer-FirstName').val(data.firstName);
                            $('#customer-LastName').val(data.lastName);
                            $('#customer-BillingAddress').val(data.billingAddress); // to chang the value of the input use .val()
                            $('#customer-BillingZip').val(data.billingZip);
                            $('#customer-BillingCity').val(data.billingCity);
                            $('#customer-DeliveryAddress').val(data.deliveryAddress);
                            $('#customer-DeliveryZip').val(data.deliveryZip);
                            $('#customer-DeliveryCity').val(data.deliveryCity);
                            $('#customer-PhoneNumber').val(data.phoneNumber);

                        } else {
                            // Email already exists in database
                            $('#email').removeClass('is-valid');
                        }
                    });
        }

        function CheckCustomer(e){
            e.preventDefault();
            var requestUrl = "/Cart/CheckCustomer/";
            var formData = $("#form-data").serialize();
            $.ajax({
                type: "POST",
                url: requestUrl,
                dataType: "json",
                cach: false,
                data: formData,
                success: function (response) {
                    console.log(response);
                },
                error: function (xhr, status, error) {
                    console.log(error);
                }
            })
        }

         function givepaymentform() {
            
            const paymentform = document.getElementById("payment-form");
            if (paymentform.style.display === "none") {
                paymentform.style.display = "block";
                sleep(10000000);
            } else {
                paymentform.style.display = "none";
            }
         }

        function sleep(ms) {
            return new Promise(resolve => setTimeout(resolve, ms));
        }
    </script>
}


